name: tesing Workflow
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [develop]
#   pull_request:
#     branches: [develop]
  workflow_dispatch:

jobs: 
  testing:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
     - name: Checkout Code
       uses: actions/checkout@v2.3.4
       with:
          fetch-depth: 0
     - name: Get version
       id: tag
       run: |
         VERSION=`cat ./pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs`
         echo "::set-output name=version::$(echo $VERSION | cut -d'+' -f1)"
        
     - name: New Release Publish
       id: new_publish
       uses: release-drafter/release-drafter@v5
       with:
         tag: v${{ steps.tag.outputs.version }}
         publish : true
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - uses: actions/checkout@v2
     
#      - id: tag
#        run: |
#         VERSION=`cat ./pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs`
#         echo "::set-output name=version::$(echo $VERSION | cut -d'+' -f1)"
        
#      - run: echo ${{ steps.tag.outputs.version }}
     
#      - id: read-version
#        uses: NiklasLehnfeld/flutter-version-number-action@main
#        with:
#          file-path: ./pubspec.yaml
     
#      - name: Extract Version Number
#        id: extract-version
#        run: echo "::set-output name=version::$(echo ${{ steps.read-version.outputs.version-number }} | cut -d'+' -f1)"
      
#      - run: echo ${{ steps.extract-version.outputs.version }}

       


# - run: ls
        
#       - name: Get version
#         id: yq
#         uses: mikefarah/yq@master
#         with:
#           cmd: yq -r '.version' 'pubspec.yaml'
        
#       - name: New Release Publish
#         id: new_publish
#         uses: release-drafter/release-drafter@v5
#         with:
#           tag: v${{ steps.yq.outputs.result }}
#           publish : true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
      
          
#       - uses: rickstaa/action-create-tag@v1
#         id: "tag_create"
#         with:
#           tag: v${{ steps.yq.outputs.result }}
#           force_push_tag: true
  

#       - name: check tag
#         uses: mukunku/tag-exists-action@v1.2.0
#         id: checkTag
#         with: 
#           tag: v${{ steps.yq.outputs.result }}
      
#       - name: Create Git tag
#         shell: bash
#         if: ${{ steps.checkTag.outputs.exists == 'false' }}
#         run: |
#          git tag v${{ steps.yq.outputs.result }}
#          git push origin v${{ steps.yq.outputs.result }}
          
#       - name: Create Git tag
#         shell: bash
#         if: ${{ steps.checkTag.outputs.exists == 'false' }}
#         run: |
#           git tag v${{ steps.yq.outputs.version }}
#           git push origin v${{ steps.yq.outputs.version }}



#       - name: Setup Dart
#         uses: dart-lang/setup-dart@v1

#       - name: Get package version
#         id: get_version
#         run: echo "::set-output name=version::$(awk '/^version:/ {print $2}' pubspec.yaml)"
      
#       - name: check tag
#         uses: mukunku/tag-exists-action@v1.2.0
#         id: checkTag
#         with: 
#           tag: ${{ steps.get_version.outputs.version }}
          
#       - name: Create Git tag
#         if: ${{ steps.checkTag.outputs.exists == 'false' }}
#         run: |
#           git tag ${{ steps.get_version.outputs.version }}
#           git push origin ${{ steps.get_version.outputs.version }}

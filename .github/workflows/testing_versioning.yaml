name: tesing Workflow
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [develop]
#   pull_request:
#     branches: [develop]
  workflow_dispatch:
  
permissions:
  contents: write

jobs: 
  testing:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v2
#       - name: Checkout code
#         id: checkout
#         uses: actions/checkout@v2
#         with:
#           field_depth: 0
          
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: 'pubspec'



# - run: ls
        
#       - name: Get version
#         id: yq
#         uses: mikefarah/yq@master
#         with:
#           cmd: yq -r '.version' 'pubspec.yaml'
        
#       - name: New Release Publish
#         id: new_publish
#         uses: release-drafter/release-drafter@v5
#         with:
#           tag: v${{ steps.yq.outputs.result }}
#           publish : true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
      
          
#       - uses: rickstaa/action-create-tag@v1
#         id: "tag_create"
#         with:
#           tag: v${{ steps.yq.outputs.result }}
#           force_push_tag: true
  

#       - name: check tag
#         uses: mukunku/tag-exists-action@v1.2.0
#         id: checkTag
#         with: 
#           tag: v${{ steps.yq.outputs.result }}
      
#       - name: Create Git tag
#         shell: bash
#         if: ${{ steps.checkTag.outputs.exists == 'false' }}
#         run: |
#          git tag v${{ steps.yq.outputs.result }}
#          git push origin v${{ steps.yq.outputs.result }}
          
#       - name: Create Git tag
#         shell: bash
#         if: ${{ steps.checkTag.outputs.exists == 'false' }}
#         run: |
#           git tag v${{ steps.yq.outputs.version }}
#           git push origin v${{ steps.yq.outputs.version }}



#       - name: Setup Dart
#         uses: dart-lang/setup-dart@v1

#       - name: Get package version
#         id: get_version
#         run: echo "::set-output name=version::$(awk '/^version:/ {print $2}' pubspec.yaml)"
      
#       - name: check tag
#         uses: mukunku/tag-exists-action@v1.2.0
#         id: checkTag
#         with: 
#           tag: ${{ steps.get_version.outputs.version }}
          
#       - name: Create Git tag
#         if: ${{ steps.checkTag.outputs.exists == 'false' }}
#         run: |
#           git tag ${{ steps.get_version.outputs.version }}
#           git push origin ${{ steps.get_version.outputs.version }}
